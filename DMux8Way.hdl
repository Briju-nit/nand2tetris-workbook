/** 4-way demultiplexor
    {a,b,c,d,e,f,g,h} = {in,0,0,0,0,0,0,0} if sel==000
                        {0,in,0,0,0,0,0,0} if sel==001
                        {0,0,in,0,0,0,0,0} if sel==010
                        {0,0,0,in,0,0,0,0} if sel==011
                        {0,0,0,0,in,0,0,0} if sel==100
                        {0,0,0,0,0,in,0,0} if sel==101
                        {0,0,0,0,0,0,in,0} if sel==110
                        {0,0,0,0,0,0,0,in} if sel==111

    Copyright (C) 2013 Eric Herman
    License: GNU General Public License v3 or any later version
*/

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d;

    PARTS:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);
    And(a=notsel0, b=notsel1, out=sel00);
    And(a=sel[0], b=sel[1], out=sel11);
    And(a=notsel1, b=sel[0], out=sel01);
    And(a=sel[1], b=notsel0, out=sel10);

    And(a=notsel2, b=sel00, out=sel000);
    And(a=notsel2, b=sel01, out=sel001);
    And(a=notsel2, b=sel10, out=sel010);
    And(a=notsel2, b=sel11, out=sel011);
    And(a=sel[2], b=sel00, out=sel100);
    And(a=sel[2], b=sel01, out=sel101);
    And(a=sel[2], b=sel10, out=sel110);
    And(a=sel[2], b=sel11, out=sel111);

    And(a=sel[0], b=notsel0, out=zero);
    Mux(a=zero, b=in, sel=sel000, out=a);
    Mux(a=zero, b=in, sel=sel001, out=b);
    Mux(a=zero, b=in, sel=sel010, out=c);
    Mux(a=zero, b=in, sel=sel011, out=d);
    Mux(a=zero, b=in, sel=sel100, out=e);
    Mux(a=zero, b=in, sel=sel101, out=f);
    Mux(a=zero, b=in, sel=sel110, out=g);
    Mux(a=zero, b=in, sel=sel111, out=h);
}
